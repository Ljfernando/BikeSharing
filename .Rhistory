type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each day")
legend(as.Date("2016-06-01"), 400, c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', lwd = 3, cex = 0.6)
attach(SF_daily_bikeshare)
# Rentals and giants games
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each day")
legend(as.Date("2016-06-01"), 400, c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', lwd = 3, cex = 0.6)
attach(SF_daily_bikeshare)
# Rentals and giants games
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each day")
legend(as.Date("2016-06-01"), 400, c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', lwd = 3, cex = 0.6)
View(SF_daily_bikeshare)
load("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeshareWoutliers.RData")
View(SF_daily_bikeshare)
SF_daily_bikeshare <- SF_daily_bikeshare[,-36]
View(SF_daily_bikeshare)
load("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeshareWoutliers.RData")
View(SF_daily_bikeshare)
SF_daily_bikeshare <- SF_daily_bikeshare[,-35]
View(SF_daily_bikeshare)
Giants_Games <- read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/SF_Giants_Home_Games.csv")
# Changing the format of the dates column
# +730485 to alter year to 2013
Giants_Games$Date <- as.Date(Giants_Games$Date, format = "%m/%d/%Y") + 730485
# Creating an empty matrix with all dates over three years with 0s as their Game occurence value
Game <- rep(0,1083)
Game_with_Dates <- data.frame(Date = SF_daily_bikeshare$PDT, Game)
# Adding 1s to specific dates Game_with_Dates matrix where a Giants game occured
index <- 1
for(i in 1:nrow(Giants_Games)){
for(j in index:nrow(Game_with_Dates)){
if(Giants_Games$Date[i] == Game_with_Dates$Date[j]){
Game_with_Dates$Game[j] = 1
index = j + 1
break
}
}
}
# Adding to the main dataset
SF_daily_bikeshare <- data.frame(SF_daily_bikeshare, Giants_Game = Game_with_Dates$Game)
rm(Game_with_Dates,Giants_Games,Game,i,j, index)
save.image("~/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeShareWoutliers.RData")
load("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeshareWoutliers.RData")
par(mfrow = c(1,2))
plot(weekday, duration_total/60, xlab = "Day of the week", ylab= "Duration in minutes", main = "Duration totals per day", col = "slateblue")
plot(PDT, duration_total/60, xlab = "Month", ylab = "Duration in minutes", main = "Duration totals throughout the year", col = "firebrick")
View(SF_daily_bikeshare)
trip_data_201508 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_2/201508_trip_data.csv", na.strings = "NA")
trip_data_201508 = na.omit(trip_data_201508)
weather_data_201508 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_2/201508_weather_data.csv", na.strings = "NA")
weather_data_201508 = na.omit(weather_data_201508)
station_data_201508 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_2/201508_station_data.csv", na.strings = "NA")
station_data_201508 = na.omit(station_data_201508)
trip_data_201608 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_3/201608_trip_data.csv", na.strings = "NA")
trip_data_201608 = na.omit(trip_data_201608)
weather_data_201608 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_3/201608_weather_data.csv", na.strings = "NA")
weather_data_201608 = na.omit(weather_data_201608)
station_data_201608 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_3/201608_station_data.csv", na.strings = "NA")
station_data_201608 = na.omit(station_data_201608)
trip_data_201402 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_1/201402_babs_open_data/201402_trip_data.csv", na.strings = "NA")
trip_data_201402 = na.omit(trip_data_201402)
weather_data_201402 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_1/201402_babs_open_data/201402_weather_data.csv", na.strings = "NA")
weather_data_201402 = na.omit(weather_data_201402)
station_data_201402 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_1/201402_babs_open_data/201402_station_data.csv", na.strings = "NA")
station_data_201402 = na.omit(station_data_201402)
trip_data_201408 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_1/201408_babs_open_data/201408_trip_data.csv", na.strings = "NA")
trip_data_201408 = na.omit(trip_data_201408)
weather_data_201408 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_1/201408_babs_open_data/201408_weather_data.csv", na.strings = "NA")
weather_data_201408 = na.omit(weather_data_201408)
station_data_201408 = read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/babs_open_data_year_1/201408_babs_open_data/201408_station_data.csv", na.strings = "NA")
station_data_201408 = na.omit(station_data_201408)
# Ensuring column names match and merging trip_data files
names(trip_data_201402)[10] <- "Subscriber.Type"
trip_data_201408 <- rbind(trip_data_201402, trip_data_201408)
rm(trip_data_201402)
trip_data <- rbind(trip_data_201408, trip_data_201508, trip_data_201608)
rm(trip_data_201408, trip_data_201508, trip_data_201608)
# Ensuring column names match and merging weather files
names(weather_data_201402) <- names(weather_data_201408)
weather_data_201408 <- rbind(weather_data_201402, weather_data_201408)
rm(weather_data_201402)
names(weather_data_201608)[24] <- "Zip"
weather_data <- rbind(weather_data_201408, weather_data_201508, weather_data_201608)
rm(weather_data_201408, weather_data_201608, weather_data_201508)
# PrecipitationIn column values with T are measured as >0.01
weather_data[weather_data$PrecipitationIn == "T","PrecipitationIn"] <- 0.01
# Categorizing events from 0-4
# 4 = Rain-Storm, 3 = Rain, 2 = Fog-Rain, 1 = Fog
weather_events <- ifelse(weather_data$Events == "Rain-Thunderstorm", 4,
ifelse(weather_data$Events == "Rain" | weather_data$Events == "rain", 3,
ifelse(weather_data$Events == "Fog-Rain", 2,
ifelse(weather_data$Events == "Fog", 1, 0))))
weather_data$Events <- weather_events
rm(weather_events)
# Load workspace
## load("DataPreprocessing.RData")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
## Calculating total trips each day in SF
## Grabbing only San Francisco stations
SF_stations <- station_data_201608[station_data_201608$landmark == "San Francisco",]
SF_trips <- trip_data[trip_data$Start.Terminal %in% SF_stations$station_id,] # %in% checks if values in list
curr_time = as.POSIXlt(SF_trips$Start.Date[1], format = "%m/%d/%Y %H:%M");
index <- 1:nrow(SF_trips)
j <- 1
day <- rep(NA, 900)
weekday <- rep(NA, 900)
month <- rep(NA, 900)
year <- rep(NA, 900)
day_total <- rep(NA, 900)
sub_total <- rep(NA,900)
cust_total <- rep(NA,900)
date <- rep(NA, 900)
duration_total <- rep(NA, 900)
sub_dur_total <- rep(NA, 900)
cust_dur_total <- rep(NA, 900)
total = 0
num_sub = 0
num_cust = 0
dur_total = 0
sub_dur = 0
cust_dur = 0
for(i in index){
next_row_time <- as.POSIXlt(SF_trips$Start.Date[i], format = "%m/%d/%Y %H:%M")
if(next_row_time$yday != curr_time$yday | next_row_time$year != curr_time$year | i == nrow(SF_trips)){
# Storing data at index j to new vectors
day_total[j] <- total
day[j] <- curr_time$mday
weekday[j] <- curr_time$wday
month[j] <- curr_time$mon
year[j] <- curr_time$year + 3900
sub_total[j] <- num_sub
cust_total[j] <- num_cust
sub_dur_total[j] <- sub_dur
cust_dur_total[j] <- cust_dur
duration_total[j] <- dur_total
date[j] <- as.Date.POSIXlt(curr_time, format = "%m/%d/%Y")
j <- j + 1
# Updating variables
total <- 0
curr_time <- next_row_time
num_cust <- 0
num_sub <- 0
dur_total <-0
sub_dur <- 0
cust_dur <- 0
}
else{
total <- total + 1
dur_total <- dur_total + SF_trips$Duration[i]
if(SF_trips$Subscriber.Type[i] == "Subscriber"){
num_sub <- num_sub + 1
sub_dur <- sub_dur + SF_trips$Duration[i]
}
else{
num_cust <- num_cust +1
cust_dur <- cust_dur + SF_trips$Duration[i]
}
}
}
#date is in numeric form with origin 3970-01-01
#converting it to readable format
PDT <- as.Date(date, origin = "3970-01-01")
is_weekend <- ifelse(weekday == 0 | weekday == 6, 1, 0)
SF_totals <- data.frame(PDT, day_total, sub_total, cust_total, duration_total, sub_dur_total, cust_dur_total,is_weekend, day, weekday, month, year)
#~~~~~~~~~~~~~~~
# Merging weather and SF_totals
SF_weather_data <- weather_data[weather_data$Zip == 94107,]
# Removing Zip code column
SF_weather_data <-SF_weather_data[,-24]
#Changing format to match in both datasets
SF_weather_data$PDT <- as.Date(SF_weather_data$PDT, format = "%m/%d/%Y")
?merge
# Merging on dates based on PDT
# If SF_weather_data is missing a specific date, it will not
# be added to the merged data set
SF_daily_bikeshare <- merge(SF_totals, SF_weather_data, by = "PDT", all.y  = TRUE, all.x = FALSE)
rm(curr_time,cust_dur, cust_dur_total,cust_total, date, day, day_total,
dur_total, duration_total, i, index, is_weekend, j ,month,
next_row_time, num_cust, num_sub, PDT, sub_dur, sub_dur_total,
sub_total, total, weekday, year, station_data_201402, station_data_201408, station_data_201508, station_data_201608)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~Adding Features~~~~~~~~~~~~~~~~~~~~
# ~~~~~Adding qualitative feature value for days when a Giants home game occurs~~~~~~
Giants_Games <- read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/SF_Giants_Home_Games.csv")
# Changing the format of the dates column
# +730485 to alter year to 2013
Giants_Games$Date <- as.Date(Giants_Games$Date, format = "%m/%d/%Y") + 730485
# Creating an empty matrix with all dates over three years with 0s as their Game occurence value
Game <- rep(0,1083)
Game_with_Dates <- data.frame(Date = SF_daily_bikeshare$PDT, Game)
# Adding 1s to specific dates Game_with_Dates matrix where a Giants game occured
index <- 1
for(i in 1:nrow(Giants_Games)){
for(j in index:nrow(Game_with_Dates)){
if(Giants_Games$Date[i] == Game_with_Dates$Date[j]){
Game_with_Dates$Game[j] = 1
index = j + 1
break
}
}
}
# Adding to the main dataset
SF_daily_bikeshare <- data.frame(SF_daily_bikeshare, Giants_Game = Game_with_Dates$Game)
rm(Game_with_Dates,Giants_Games,Game,i,j, index)
#~~~~~~~Adding qualitative feature value for days when a large SF event occurs that
#~~~~~~~may effect bicycle travel. 1 is SF Sunday events. 2 is SF Bike to work days
SF_events <- read.csv("/Users/lancefernando/Desktop/DataMining/RPRojects/BayAreaBikeShareData/BikeSharing/SF_Events.csv")
SF_events$Date <- as.Date(SF_events$Date, format = "%m/%d/%Y") + 730485
Event <- rep(0, 1083)
Event_with_Dates <- data.frame(Date = SF_daily_bikeshare$PDT, Event)
index <- 1
for(i in 1:nrow(SF_events)){
for(j in index:nrow(Event_with_Dates)){
if(SF_events$Date[i] == Event_with_Dates$Date[j]){
Event_with_Dates$Event[j] = SF_events$Event[i]
index = j + 1
break
}
}
}
SF_daily_bikeshare <- data.frame(SF_daily_bikeshare, SF_Event = Event_with_Dates$Event)
rm(SF_events, Event_with_Dates,Event,i,j, index)
#~~~~~~~Adding end of the week avg gas price in San Francisco
SF_gas_avg <- read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/Gas_Prices.csv")
SF_gas_avg$End.Date <- as.Date(SF_gas_avg$End.Date, format = "%m/%d/%Y") + 730485
Gas_Value <- rep(0,1083)
Gas_with_Dates <- data.frame(Date = SF_daily_bikeshare$PDT, Gas_Value)
# When adding end of week gas prices, the end of week gas value is reflected on
# all the days within that week.
index <- 1
for(i in 1:nrow(SF_gas_avg)){
curr_gas_val <- SF_gas_avg$Value[i]
for(j in index:nrow(Gas_with_Dates)){
Gas_with_Dates$Gas_Value[j] <- curr_gas_val
if(SF_gas_avg$End.Date[i] == Gas_with_Dates$Date[j]){
if(i == nrow(SF_gas_avg)){
for(k in 1:2){
Gas_with_Dates$Gas_Value[j+ k] <- curr_gas_val
}
}
index = j + 1
break
}
}
}
SF_daily_bikeshare <- data.frame(SF_daily_bikeshare, Avg_Gas_Value = Gas_with_Dates$Gas_Value)
rm(Gas_with_Dates, SF_gas_avg, curr_gas_val, Gas_Value, i, index, j, k)
rm(SF_stations, SF_totals, SF_trips, SF_weather_data, trip_data, weather_data)
#~~~~~~~Adding Federal Holiday dates to dataframe~~~~~~~~~~~~~~
Fed_holiday <- read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/holidays.csv",
header = TRUE)
holidates <- as.Date(Fed_holiday$Date, format = "%d/%m/%Y")
all_dates <- SF_daily_bikeshare$PDT
holiday <- rep(0, 1083)
all_dates <- data.frame(Date = all_dates, holiday)
index <- 1
for(i in 1:length(holidates)){
for(j in index:nrow(all_dates)){
if(holidates[i] == all_dates$Date[j]){
all_dates$holiday[j] = 1
index = j + 1
break
}
}
}
SF_daily_bikeshare <- data.frame(SF_daily_bikeshare, Fed_holiday = all_dates$holiday)
rm(all_dates, Fed_holiday, holidates, holiday, i, index, j)
#~~~~~~~~~~~~~~~~~~~~~~ Calculating distance of each trip in San Francisco ~~~~~~~~~~~~~~~~~
# WARNING : THIS SCRIPT DOES NOT WORK AS SOME TRIPS ARE MADE FROM CITY TO CITY
# SINCE SOME STATIONS MAY HAVE BEEN REMOVED OR IDs WERE CHANGED, THIS SCRIPT DOES
# NOT ACCOUNT FOR THOSE CHANGES.
# install.packages("geosphere")
library(geosphere)
index <- 1:dim(SF_trips)[1]
coordinates <- matrix(nrow = dim(SF_trips)[1], ncol = 4)
colnames(coordinates) <- c("Long1", "Lat1", "Long2", "Lat2")
distance <- rep(0, dim(SF_trips)[1])
for(i in index){
start <- SF_trips[i, 5]
end <- SF_trips[i, 8]
coordinates[i,1] <- SF_stations[SF_stations$station_id == start, 4]
coordinates[i,2] <- SF_stations[SF_stations$station_id == start, 3]
coordinates[i,3] <- SF_stations[SF_stations$station_id == end, 4]
coordinates[i,4] <- SF_stations[SF_stations$station_id == end, 3]
start_pos <- c(SF_stations[SF_stations$station_id == start, 4], SF_stations[SF_stations$station_id == start, 3])
end_pos <- c(SF_stations[SF_stations$station_id == end, 4], SF_stations[SF_stations$station_id == end, 3])
distance[i] <- distCosine(start_pos, end_pos)
}
SF_trips <- data.frame(SF_trips, distance)
rm(coordinates)
View(SF_daily_bikeshare)
SF_daily_bikeshare <- SF_daily_bikeshare[,-36]
View(SF_daily_bikeshare)
Fed_holiday <- read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/holidays.csv",
header = TRUE)
holidates <- as.Date(Fed_holiday$Date, format = "%d/%m/%Y")
all_dates <- SF_daily_bikeshare$PDT
holiday <- rep(0, 1083)
all_dates <- data.frame(Date = all_dates, holiday)
index <- 1
for(i in 1:length(holidates)){
for(j in index:nrow(all_dates)){
if(holidates[i] == all_dates$Date[j]){
all_dates$holiday[j] = 1
index = j + 1
break
}
}
}
SF_daily_bikeshare <- data.frame(SF_daily_bikeshare, Fed_holiday = all_dates$holiday)
rm(all_dates, Fed_holiday, holidates, holiday, i, index, j)
View(SF_daily_bikeshare)
Fed_holiday <- read.csv("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/holidays.csv",
header = TRUE)
View(Fed_holiday)
SF_daily_bikeshare <- SF_daily_bikeshare[,-38]
View(SF_daily_bikeshare)
rm(Fed_holiday)
SF_events <- read.csv("/Users/lancefernando/Desktop/DataMining/RPRojects/BayAreaBikeShareData/BikeSharing/SF_Events.csv")
SF_events$Date <- as.Date(SF_events$Date, format = "%m/%d/%Y") + 730485
Event <- rep(0, 1083)
Event_with_Dates <- data.frame(Date = SF_daily_bikeshare$PDT, Event)
index <- 1
for(i in 1:nrow(SF_events)){
for(j in index:nrow(Event_with_Dates)){
if(SF_events$Date[i] == Event_with_Dates$Date[j]){
Event_with_Dates$Event[j] = SF_events$Event[i]
index = j + 1
break
}
}
}
SF_daily_bikeshare <- data.frame(SF_daily_bikeshare, SF_Event = Event_with_Dates$Event)
rm(SF_events, Event_with_Dates,Event,i,j, index)
View(SF_daily_bikeshare)
load("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/SFTrips.Rdata")
save.image("~/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeShareWoutliers.RData")
load("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeshareWoutliers.RData")
par(mfrow = c(2,1))
plot(PDT, day_total, type = 'l', col = "forestgreen", xlab = "Date", ylab = "Number of rentals", main = "Rentals each month")
plot(PDT, Mean.TemperatureF, type = 'l', col = "red", xlab = "Date", ylab = "Temperature in F", main = "Temperature each month ")
lines(PDT, Max.TemperatureF, col = "orange")
lines(PDT, Min.TemperatureF, col = "lightblue")
legend(x = as.Date("2016-04-01"), y = 50, c("MaxTemp", "MeanTemp", "MinTemp"), col = c("orange", "red", "lightblue"), lty = c(1,1), cex = 0.5)
# Decrease in temperature during winter time
par(mfrow = c(1,2))
plot(weekday, duration_total/60, xlab = "Day of the week", ylab= "Duration in minutes", main = "Duration totals per day", col = "slateblue")
plot(PDT, duration_total/60, xlab = "Month", ylab = "Duration in minutes", main = "Duration totals throughout the year", col = "firebrick")
load("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeShareWoutliers.RData")
par(mfrow = c(1,2))
plot(weekday, duration_total/60, xlab = "Day of the week", ylab= "Duration in minutes", main = "Duration totals per day", col = "slateblue")
plot(PDT, duration_total/60, xlab = "Month", ylab = "Duration in minutes", main = "Duration totals throughout the year", col = "firebrick")
attach(SF_daily_bikeshare)
par(mfrow = c(1,2))
plot(weekday, duration_total/60, xlab = "Day of the week", ylab= "Duration in minutes", main = "Duration totals per day", col = "slateblue")
plot(PDT, duration_total/60, xlab = "Month", ylab = "Duration in minutes", main = "Duration totals throughout the year", col = "firebrick")
par(mfrow = c(1,2))
plot(weekday, duration_total/60, xlab = "Day of the week", ylab= "Duration in minutes", main = "Duration totals per day", col = "slateblue")
plot(PDT, duration_total/60, xlab = "Month", ylab = "Duration in minutes", main = "Duration totals throughout the year", col = "firebrick")
# Notice the outlier
dev.off()
which.max(duration_total)#clear outlier where duration at index 457
SF_daily_bikeshare[which.max(duration_total), "duration_total"]
SF_daily_bikeshare <- SF_daily_bikeshare[-457,] # Removing outlier
which.max(duration_total)#clear outlier where duration at index 655
SF_daily_bikeshare[which.max(duration_total), "duration_total"]
SF_daily_bikeshare <- SF_daily_bikeshare[-655,] # Removing outlier
attach(SF_daily_bikeshare)
par(mfrow = c(1,2))
plot(weekday, duration_total/60, xlab = "Day of the week", ylab= "Duration in minutes", main = "Duration totals per day", col = "slateblue")
plot(PDT, duration_total/60, xlab = "Month", ylab = "Duration in minutes", main = "Duration totals throughout the year", col = "firebrick")
```{r}
par(mfrow = c(2,2))
plot(weekday, sub_dur_total/60, xlab = "Day of the week", ylab = "Duration in minutes", main = "Subscribers", col = "skyblue")
plot(weekday[-96], cust_dur_total[-96]/60, xlab = "Day of the week", ylab = "Duration in minutes", main = "Customers", col = "slateblue4")
plot(PDT, sub_dur_total/60, col = ifelse(is_weekend ==1,"orange", "steelblue"), xlab = "Month", ylab = "Duration in minutes", main = "Subscribers")
legend(x = as.Date("2016-04-01"), y = 20000, c("Weekday", "Weekend"), col = c("steelblue", "orange"), pch = 1, cex = 0.6)
plot(PDT[-96], cust_dur_total[-96]/60, col = ifelse(is_weekend == 1, "orange", "steelblue"), xlab = "Month", ylab = "Duration in minutes", main = "Customers")
legend(x = as.Date("2016-04-01"), y = 27500, c("Weekday", "Weekend"), col = c("steelblue", "orange"), pch = 1, cex = 0.6)
par(mfrow = c(1, 2))
SF_trips$Start.Terminal <- as.factor(SF_trips$Start.Terminal)
SF_trips$End.Terminal <- as.factor(SF_trips$End.Terminal)
SF_trips$Start.Terminal <- as.numeric(SF_trips$Start.Terminal)
SF_trips$End.Terminal <- as.numeric(SF_trips$End.Terminal)
hist(SF_trips$Start.Terminal, xlab = "Station ID", ylab = "Number of occurences", main = "Start Station Stats", col = "darkseagreen3", breaks = 42)
hist(SF_trips$End.Terminal, xlab = "Station ID", ylab = "Number of occurences", main = "End Station stats", col = "firebrick", breaks = 42, xlim = c(10, 51))
dev.off()
par(mfrow = c(2,1))
plot(PDT, day_total, type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", main = "Rentals each day")
plot(PDT, Avg_Gas_Value, type = 'l', col = "orange", xlab = "Date", ylab = "Gas Prices", main = "Average Gas Prices")
dev.off()
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each day")
legend(as.Date("2016-06-01"), 400, c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', lwd = 3, cex = 0.6)
plot(density(SF_daily_bikeshare$duration_total))
library(moments)
skewness(SF_daily_bikeshare$duration_total)
dev.off()
# curr_time = as.POSIXlt(SF_trips$Start.Date[1], format = "%m/%d/%Y %H:%M");
#
# index <- 1:nrow(SF_trips)
# j <- 1
#
# day <- rep(NA, 900)
# weekday <- rep(NA, 900)
# month <- rep(NA, 900)
# year <- rep(NA, 900)
# day_total <- rep(NA, 900)
# sub_total <- rep(NA,900)
# cust_total <- rep(NA,900)
# date <- rep(NA, 900)
# duration_total <- rep(NA, 900)
# sub_dur_total <- rep(NA, 900)
# cust_dur_total <- rep(NA, 900)
#
# total = 0
# num_sub = 0
# num_cust = 0
# dur_total = 0
# sub_dur = 0
# cust_dur = 0
# for(i in index){
#
#   next_row_time <- as.POSIXlt(SF_trips$Start.Date[i], format = "%m/%d/%Y %H:%M")
#   if(next_row_time$yday != curr_time$yday | next_row_time$year != curr_time$year | i == nrow(SF_trips)){
#
#     # Storing data at index j to new vectors
#     day_total[j] <- total
#     day[j] <- curr_time$mday
#     weekday[j] <- curr_time$wday
#     month[j] <- curr_time$mon
#     year[j] <- curr_time$year + 3900
#     sub_total[j] <- num_sub
#     cust_total[j] <- num_cust
#     sub_dur_total[j] <- sub_dur
#     cust_dur_total[j] <- cust_dur
#     duration_total[j] <- dur_total
#     date[j] <- as.Date.POSIXlt(curr_time, format = "%m/%d/%Y")
#
#     j <- j + 1
#
#     # Updating variables
#     total <- 0
#     curr_time <- next_row_time
#     num_cust <- 0
#     num_sub <- 0
#     dur_total <-0
#     sub_dur <- 0
#     cust_dur <- 0
#   }
#   else{
#     total <- total + 1
#     dur_total <- dur_total + SF_trips$Duration[i]
#     if(SF_trips$Subscriber.Type[i] == "Subscriber"){
#       num_sub <- num_sub + 1
#       sub_dur <- sub_dur + SF_trips$Duration[i]
#     }
#     else{
#       num_cust <- num_cust +1
#       cust_dur <- cust_dur + SF_trips$Duration[i]
#     }
#   }
# }
#
# #date is in numeric form with origin 3970-01-01
# #converting it to readable format
# PDT <- as.Date(date, origin = "3970-01-01")
# is_weekend <- ifelse(weekday == 0 | weekday == 6, 1, 0)
# SF_totals <- data.frame(PDT, day_total, sub_total, cust_total, duration_total, sub_dur_total, cust_dur_total,is_weekend, day, weekday, month, year)
View(SF_daily_bikeshare)
View(SF_daily_bikeshare)
theme: journal  # many options for theme, this one is my favorite.
summary(lm(SF_daily_bikeshare$day_total~SF_daily_bikeshare$duration_total, data = SF_daily_bikeshare))
View(SF_daily_bikeshare)
View(SF_daily_bikeshare)
View(SF_daily_bikeshare)
library(randomForest)
View(SF_daily_bikeshare)
features <- c("Giants_Game", "Avg_Gas_Value", "SF_Event", "Fed_holiday")
set.seed(1)
bag.bikes <- randomForest(day_total~.-Zip-PDT-day_total-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare[,-features] ,subset =train, mtry= 29, importance =TRUE)
features <- which(names(SF_daily_bikeshare) %in% features)
set.seed(1)
bag.bikes <- randomForest(day_total~.-Zip-PDT-day_total-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare[,-features] ,subset =train, mtry= 29, importance =TRUE)
View(SF_daily_bikeshare)
bag.bikes <- randomForest(day_total~.-PDT-day_total-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare[,-features] ,subset =train, mtry= 29, importance =TRUE)
set.seed(101)
train <- sample(1:1083, 700)
set.seed(101)
bag.bikes <- randomForest(day_total~.-PDT-day_total-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare[,-features] ,subset =train, mtry= 29, importance =TRUE)
anyNA(SF_daily_bikeshare$day_total)
set.seed(101)
bag.bikes <- randomForest(day_total~.-PDT-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare[,-features] ,subset =train, mtry= 29, importance =TRUE)
attach(SF_daily_bikeshare)
set.seed(101)
bag.bikes <- randomForest(day_total~.-PDT-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare[,-features] ,subset =train, mtry= 29, importance =TRUE)
View(SF_daily_bikeshare)
anyNA(SF_daily_bikeshare)
bag.bikes <- randomForest(day_total~.-PDT-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare[,-features] ,subset =train, mtry= 29, importance =TRUE)
sapply(SF_daily_bikeshare, class)
load("/Users/lancefernando/Desktop/DataMining/RProjects/BayAreaBikeShareData/BikeSharing/BikeshareWoutliers.RData")
